rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- FUNCIONES DE AYUDA ---

    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(ownerId) {
      return isSignedIn() && request.auth.uid == ownerId;
    }

    function isAdmin() {
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }


    function validatePetData(data) {      
      return data.keys().hasOnly(['name', 'description', 'imagesUrl', 'status', 'ownerId']) &&
             data.name is string && data.name.size() >= 3 &&
             data.description is string &&
             data.imagesUrl is list && data.imagesUrl.size() >= 1 &&
             data.ownerId is string && data.ownerId.size() > 0;
    }



    match /users/{userId} {
      allow create: if isOwner(userId);

      allow read, update: if isOwner(userId) || isAdmin();
    }

    match /pets/{petId} {
      allow read: if isOwner(resource.data.ownerId) || isAdmin() || resource.data.status == 'missing';

      allow create: if false;

      allow update: if (isOwner(resource.data.ownerId) || isAdmin()) && validatePetData(request.resource.data);

      allow delete: if isOwner(resource.data.ownerId) || isAdmin();
    }
  }
}